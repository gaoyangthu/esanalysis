<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="TransactionMapper">
	<resultMap id="BaseResultMap" type="Transaction">
		<id column="transaction_id" property="transactionId" jdbcType="VARCHAR"/>
		<result column="transaction_type" property="transactionType" jdbcType="INTEGER"/>
		<result column="status" property="status" jdbcType="INTEGER"/>
		<result column="transaction_time" property="transactionTime" jdbcType="TIMESTAMP"/>
		<result column="FK_user_id" property="fkUserId" jdbcType="VARCHAR"/>
		<result column="FK_account_id" property="fkAccountId" jdbcType="VARCHAR"/>
		<result column="FK_source_id" property="fkSourceId" jdbcType="VARCHAR"/>
		<result column="amountCash" property="amountcash" jdbcType="DECIMAL"/>
		<result column="amountCredit" property="amountcredit" jdbcType="DECIMAL"/>
		<result column="totalPaymentAmount" property="totalpaymentamount" jdbcType="DECIMAL"/>
		<result column="lastamountCash" property="lastamountcash" jdbcType="DECIMAL"/>
		<result column="lastamountCredit" property="lastamountcredit" jdbcType="DECIMAL"/>
	</resultMap>
	<sql id="Base_Column_List">
    transaction_id, transaction_type, status, transaction_time, FK_user_id, FK_account_id, 
    FK_source_id, amountCash, amountCredit, totalPaymentAmount, lastamountCash, lastamountCredit
  </sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
		select
		<include refid="Base_Column_List"/>
		from transaction
		where transaction_id = #{transactionId,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from transaction
    where transaction_id = #{transactionId,jdbcType=VARCHAR}
  </delete>
	<insert id="insert" parameterType="Transaction">
    insert into transaction (transaction_id, transaction_type, status, 
      transaction_time, FK_user_id, FK_account_id, 
      FK_source_id, amountCash, amountCredit, 
      totalPaymentAmount, lastamountCash, lastamountCredit
      )
    values (#{transactionId,jdbcType=VARCHAR}, #{transactionType,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, 
      #{transactionTime,jdbcType=TIMESTAMP}, #{fkUserId,jdbcType=VARCHAR}, #{fkAccountId,jdbcType=VARCHAR}, 
      #{fkSourceId,jdbcType=VARCHAR}, #{amountcash,jdbcType=DECIMAL}, #{amountcredit,jdbcType=DECIMAL}, 
      #{totalpaymentamount,jdbcType=DECIMAL}, #{lastamountcash,jdbcType=DECIMAL}, #{lastamountcredit,jdbcType=DECIMAL}
      )
  </insert>
	<insert id="insertSelective" parameterType="Transaction">
		insert into transaction
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="transactionId != null">
				transaction_id,
			</if>
			<if test="transactionType != null">
				transaction_type,
			</if>
			<if test="status != null">
				status,
			</if>
			<if test="transactionTime != null">
				transaction_time,
			</if>
			<if test="fkUserId != null">
				FK_user_id,
			</if>
			<if test="fkAccountId != null">
				FK_account_id,
			</if>
			<if test="fkSourceId != null">
				FK_source_id,
			</if>
			<if test="amountcash != null">
				amountCash,
			</if>
			<if test="amountcredit != null">
				amountCredit,
			</if>
			<if test="totalpaymentamount != null">
				totalPaymentAmount,
			</if>
			<if test="lastamountcash != null">
				lastamountCash,
			</if>
			<if test="lastamountcredit != null">
				lastamountCredit,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="transactionId != null">
				#{transactionId,jdbcType=VARCHAR},
			</if>
			<if test="transactionType != null">
				#{transactionType,jdbcType=INTEGER},
			</if>
			<if test="status != null">
				#{status,jdbcType=INTEGER},
			</if>
			<if test="transactionTime != null">
				#{transactionTime,jdbcType=TIMESTAMP},
			</if>
			<if test="fkUserId != null">
				#{fkUserId,jdbcType=VARCHAR},
			</if>
			<if test="fkAccountId != null">
				#{fkAccountId,jdbcType=VARCHAR},
			</if>
			<if test="fkSourceId != null">
				#{fkSourceId,jdbcType=VARCHAR},
			</if>
			<if test="amountcash != null">
				#{amountcash,jdbcType=DECIMAL},
			</if>
			<if test="amountcredit != null">
				#{amountcredit,jdbcType=DECIMAL},
			</if>
			<if test="totalpaymentamount != null">
				#{totalpaymentamount,jdbcType=DECIMAL},
			</if>
			<if test="lastamountcash != null">
				#{lastamountcash,jdbcType=DECIMAL},
			</if>
			<if test="lastamountcredit != null">
				#{lastamountcredit,jdbcType=DECIMAL},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="Transaction">
		update transaction
		<set>
			<if test="transactionType != null">
				transaction_type = #{transactionType,jdbcType=INTEGER},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=INTEGER},
			</if>
			<if test="transactionTime != null">
				transaction_time = #{transactionTime,jdbcType=TIMESTAMP},
			</if>
			<if test="fkUserId != null">
				FK_user_id = #{fkUserId,jdbcType=VARCHAR},
			</if>
			<if test="fkAccountId != null">
				FK_account_id = #{fkAccountId,jdbcType=VARCHAR},
			</if>
			<if test="fkSourceId != null">
				FK_source_id = #{fkSourceId,jdbcType=VARCHAR},
			</if>
			<if test="amountcash != null">
				amountCash = #{amountcash,jdbcType=DECIMAL},
			</if>
			<if test="amountcredit != null">
				amountCredit = #{amountcredit,jdbcType=DECIMAL},
			</if>
			<if test="totalpaymentamount != null">
				totalPaymentAmount = #{totalpaymentamount,jdbcType=DECIMAL},
			</if>
			<if test="lastamountcash != null">
				lastamountCash = #{lastamountcash,jdbcType=DECIMAL},
			</if>
			<if test="lastamountcredit != null">
				lastamountCredit = #{lastamountcredit,jdbcType=DECIMAL},
			</if>
		</set>
		where transaction_id = #{transactionId,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="Transaction">
    update transaction
    set transaction_type = #{transactionType,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      transaction_time = #{transactionTime,jdbcType=TIMESTAMP},
      FK_user_id = #{fkUserId,jdbcType=VARCHAR},
      FK_account_id = #{fkAccountId,jdbcType=VARCHAR},
      FK_source_id = #{fkSourceId,jdbcType=VARCHAR},
      amountCash = #{amountcash,jdbcType=DECIMAL},
      amountCredit = #{amountcredit,jdbcType=DECIMAL},
      totalPaymentAmount = #{totalpaymentamount,jdbcType=DECIMAL},
      lastamountCash = #{lastamountcash,jdbcType=DECIMAL},
      lastamountCredit = #{lastamountcredit,jdbcType=DECIMAL}
    where transaction_id = #{transactionId,jdbcType=VARCHAR}
  </update>

	<select id="findByDate" resultMap="BaseResultMap" parameterType="map">
		select
		<include refid="Base_Column_List"/>
		from transaction
		<where>
			<if test="transactionType != null">
				transaction_type = #{transactionType,jdbcType=INTEGER}
			</if>
			<if test="beginDate != null">
				<![CDATA[
				and transaction_time >= #{beginDate,jdbcType=TIMESTAMP}
				]]>
			</if>
			<if test="endDate != null">
				<![CDATA[
				and transaction_time <= #{endDate,jdbcType=TIMESTAMP}
				]]>
			</if>
		</where>
		order by transaction_time asc
	</select>

	<select id="findOrderTransaction" resultMap="BaseResultMap" parameterType="String">
		select
		<include refid="Base_Column_List"/>
		from transaction
		<where>
			FK_source_id = #{sourceId,jdbcType=VARCHAR}
			and transaction_type = 0
		</where>
	</select>
</mapper>
